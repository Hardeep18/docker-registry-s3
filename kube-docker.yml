---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth
  labels:
    app: docker-registry
data:
  htpasswd: |-
    admin:$2y$05$WDL5JBbnBQAQv4Iir7h3QevHwiObTvO2XJWnpGOqLHwDw7pCN24kC
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
spec:
  selector:
    matchLabels:
      app: docker-registry
  replicas: 1
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry:2
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
          - name: REGISTRY_AUTH
            value: "htpasswd"
          - name: REGISTRY_AUTH_HTPASSWD_PATH
            value: "/auth/htpasswd"
          - name: REGISTRY_AUTH_HTPASSWD_REALM
            value: "Registry Realm"
          - name: REGISTRY_STORAGE
            value: "s3"
          - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
            value: "inmemory"
          - name: REGISTRY_STORAGE_DELETE_ENABLED
            value: "true"
          - name: REGISTRY_STORAGE_S3_ACCESSKEY
            value: ""
          - name: REGISTRY_STORAGE_S3_BUCKET
            value: ""
          - name: REGISTRY_STORAGE_S3_REGION
            value: ""
          - name: REGISTRY_STORAGE_S3_SECRETKEY
            value: ""
        volumeMounts:
        - name: auth
          mountPath: /auth/htpasswd
          readOnly: true
          subPath: htpasswd       
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "250Mi"
            cpu: "250m"
      volumes:
      - name: auth
        configMap:
          defaultMode: 0600
          name: htpasswd
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: docker-registry
  selector:
    app: docker-registry